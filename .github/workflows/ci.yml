name: Rust CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-targets --all-features --

  test:
    name: Test
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      
      - name: Run tests
        run: cargo test --all-features --workspace
      
      - name: Run doc tests
        run: cargo test --doc --all-features --workspace

  publish:
    name: Publish
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      
      - name: Extract version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Verify versions match
        run: |
          for crate in $(find . -name Cargo.toml -not -path "*/target/*"); do
            if grep -q "version = \"${{ steps.get_version.outputs.VERSION }}\"" "$crate"; then
              echo "✓ Version matches in $crate"
            else
              echo "✗ Version mismatch in $crate"
              exit 1
            fi
          done
      
      - name: Login to crates.io
        run: cargo login ${{ secrets.CRATES_IO_TOKEN }}
      
      - name: Publish workspace
        run: |
          cargo publish --no-verify --workspace
